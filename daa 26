#include <stdio.h>
#include <limits.h>

#define V 4 
int min(int x, int y)
{
    return (x < y) ? x : y;
}


int tsp(int graph[V][V], int mask, int pos, int dp[V][1 << V])
{
    
    if (mask == (1 << V) - 1)
        return graph[pos][0];

    
    if (dp[pos][mask] != -1)
        return dp[pos][mask];

    int ans = INT_MAX;

    
    for (int city = 0; city < V; city++)
    {
        if ((mask & (1 << city)) == 0)
        {
            int newAns = graph[pos][city] + tsp(graph, mask | (1 << city), city, dp);
            ans = min(ans, newAns);
        }
    }

    
    return dp[pos][mask] = ans;
}


int main()
{
    int graph[V][V];

    printf("Enter the cost matrix (4x4) for the cities:\n");

    for (int i = 0; i < V; i++)
    {
        for (int j = 0; j < V; j++)
        {
            scanf("%d", &graph[i][j]);
        }
    }

  
    int dp[V][1 << V];
    for (int i = 0; i < V; i++)
    {
        for (int j = 0; j < (1 << V); j++)
        {
            dp[i][j] = -1;
        }
    }

    
    int ans = tsp(graph, 1, 0, dp); 

    
    printf("Minimum cost for the Travelling Salesman Problem is %d\n", ans);

    return 0;
}
